<Window
    x:Class="Presentation.ApplicationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="clr-namespace:Presentation.ViewModel"
    xmlns:views="clr-namespace:Presentation.View"
    Title="Kanban"
    Width="980"
    Height="800"
    MinWidth="700"
    MinHeight="550"
    d:DataContext="{d:DesignInstance Type=local:ApplicationViewModel}"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
    TextElement.FontSize="14"
    TextElement.FontWeight="Medium"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">


    <Window.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type local:BoardsViewModel}">
                <local:BoardsView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:TasksViewModel}">
                <local:TasksView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:SpecificBoardViewModel}">
                <views:SpecificBoardView />
            </DataTemplate>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>


    <materialDesign:DialogHost
        CloseOnClickAway="True"
        DialogTheme="Inherit"
        Identifier="RootDialog"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton
                        Margin="16"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                    <StackPanel DockPanel.Dock="Bottom">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                            Text="Account" />
                        <Separator Width="100" Height="20" />
                        <Grid Margin="0,10,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <materialDesign:PackIcon
                                Grid.Column="0"
                                Margin="20,0,20,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{Binding ElementName=FloatingPasswordBox, Path=BorderBrush}"
                                Kind="AccountCircle" />
                            <TextBlock
                                Grid.Column="1"
                                Margin="0,0,20,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="{Binding Path=LoggedInUserEmail}" />
                        </Grid>
                        <Separator Width="100" Height="20" />
                        <Button
                            Margin="0,0,0,20"
                            HorizontalAlignment="Center"
                            Command="{Binding Path=LogoutCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                            Content="Log out"
                            Style="{StaticResource MaterialDesignFlatButton}" />

                    </StackPanel>

                    <ListBox
                        x:Name="DemoItemsListBox"
                        Margin="0,16,0,16"
                        AutomationProperties.Name="DemoPagesListBox"
                        DockPanel.Dock="Top"
                        ItemsSource="{Binding PageViewModels}"
                        PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                        SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource MaterialDesignListBox}">
                        <ListBox.Resources>
                            <Style BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" TargetType="ScrollBar" />
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <TextBlock
                                    Margin="24,4,0,4"
                                    AutomationProperties.AutomationId="DemoItemPage"
                                    Text="{Binding Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <DockPanel>
                <materialDesign:ColorZone
                    Padding="16"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    DockPanel.Dock="Top"
                    Mode="PrimaryDark">
                    <Grid>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                AutomationProperties.Name="HamburgerToggleButton"
                                Click="MenuToggleButton_OnClick"
                                IsChecked="False"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                        </StackPanel>

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                            Text="{Binding CurrentPageViewModel.Name}" />
                    </Grid>
                </materialDesign:ColorZone>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>


                    <ContentControl Grid.Row="1" Content="{Binding CurrentPageViewModel}" />


                    <materialDesign:Snackbar
                        x:Name="MainSnackbar"
                        Grid.Row="1"
                        MessageQueue="{materialDesign:MessageQueue}" />
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>

</Window>
